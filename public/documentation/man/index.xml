<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Man pages on libptpmgmt Project</title><link>https://libptpmgmt.nwtime.org/documentation/man/</link><description>Recent content in Man pages on libptpmgmt Project</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 16 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://libptpmgmt.nwtime.org/documentation/man/index.xml" rel="self" type="application/rss+xml"/><item><title>pmc(8): PTP management client</title><link>https://libptpmgmt.nwtime.org/documentation/man/pmc-ptpmgmt/</link><pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/man/pmc-ptpmgmt/</guid><description>pmc-ptpmgmt: PTP management client SYNOPSIS pmc-ptpmgmt [ -f config-file ] [ -2 | -4 | -6 | -u ] [ -b boundary-hops ] [ -d domain-number ] [ -i interface ] [ -s uds-address ] [ -t transport-specific-field ] [ long-options ] [ -v ] [ -z ] [ command ] &amp;hellip;
DESCRIPTION pmc-ptpmgmt is a program which implements a PTP management client according to IEEE standard 1588. The program reads from the standard input or from the command line actions specified by name and management ID, sends them over the selected transport and prints any received replies.</description></item><item><title>phc_ctl-ptpmgmt(8): directly control PHC device clock</title><link>https://libptpmgmt.nwtime.org/documentation/man/phc_ctl-ptpmgmt/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/man/phc_ctl-ptpmgmt/</guid><description>phc_ctl-ptpmgmt: directly control PHC device clock SYNOPSIS phc_ctl-ptpmgmt [ options ] &amp;lt;device&amp;gt; [ commands ]
DESCRIPTION phc_ctl-ptpmgmt is a program which can be used to directly control a PHC clock device. Typically, it is used for debugging purposes, and has little use for general control of the device. For general control of PHC clock devices, phc2sys(8) should be preferred.
&amp;lt;device&amp;gt; may be either CLOCK_REALTIME, any /dev/ptpX device, or any ethernet device which supports ethtool&amp;rsquo;s get_ts_info ioctl.</description></item></channel></rss>