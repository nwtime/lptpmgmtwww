<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Documentation on libptpmgmt Project</title><link>https://libptpmgmt.nwtime.org/documentation/</link><description>Recent content in Documentation on libptpmgmt Project</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://libptpmgmt.nwtime.org/documentation/index.xml" rel="self" type="application/rss+xml"/><item><title>C++ std::vector&lt;> map in Scripts Languages</title><link>https://libptpmgmt.nwtime.org/documentation/std_vectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/std_vectors/</guid><description>C++ std::vector&amp;lt;&amp;gt; map in Scripts Languages We use C++ std::vector&amp;lt;T&amp;gt; when we need an array or a list. The benefits of the std::vector&amp;lt;T&amp;gt;, are:
C++ manages the memory for us. We don&amp;rsquo;t need to allocate or free. The vector can grow as we do not need to allocate on advance. In the following discussion we shall call:
&amp;lsquo;container&amp;rsquo; to the mapped class in scripts. &amp;lsquo;element&amp;rsquo; to the C++ class, we use in the container.</description></item><item><title>FAQs</title><link>https://libptpmgmt.nwtime.org/documentation/faqs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/faqs/</guid><description>FAQs Q:
I downloaded the libptpmgmt from sourceforge and then tried to use the libptpmgmt with python test. But getting following error.
# python3 test.py
Traceback (most recent call last):
File &amp;quot;test.py&amp;quot;, line 14, in &amp;lt;module&amp;gt;
import ptpmgmt
ModuleNotFoundError: No module named 'ptpmgmt'
A:
The test script fails to find the libraries.
Python script needs 2 libraries:
libptpmgmt.so - The ptpmgmt C++ library. ptpmgmt.py and _ptpmgmt.so - The python wrapper library.</description></item><item><title>Guide for using Doxygen</title><link>https://libptpmgmt.nwtime.org/documentation/howto_doc_code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/howto_doc_code/</guid><description>Guide for using Doxygen Preface Our project uses Doxygen to document the library classes, functions, and constants. We document in library headers source code only.
This document guides how to do it properly.
Instructions We use Javadoc style only. We use the at-sign for commands.
We use document block before the item we describe
We use this style /** xxxxx */. The block is usually spread on multiple lines.</description></item><item><title>libptpmgmt Library to Communicate with IEEE 1558 PTP Clocks</title><link>https://libptpmgmt.nwtime.org/documentation/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/readme/</guid><description>libptpmgmt Library to Communicate with IEEE 1558 PTP Clocks Preface The library for PTP management client uses IEEE 1558 management messages to communicate with PTP entities over the network. We support get, set and command of all management TLVs that are described in IEEE 1588-2019. In addition, we support LinuxPTP specific implementation management TLVs.
The library supports the three PTP network layers:
UDP over IP version 4 UDP over IP version 6 PTP over Ethernet â€” we do not support VLAN tags In addition, we support using the Unix network and communicate with LinuxPTP ptp4l.</description></item></channel></rss>