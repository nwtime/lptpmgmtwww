<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Welcome to The libptpmgmt Project on libptpmgmt Project</title><link>https://libptpmgmt.nwtime.org/</link><description>Recent content in Welcome to The libptpmgmt Project on libptpmgmt Project</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 16 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://libptpmgmt.nwtime.org/index.xml" rel="self" type="application/rss+xml"/><item><title>pmc(8): PTP management client</title><link>https://libptpmgmt.nwtime.org/documentation/man/pmc-ptpmgmt/</link><pubDate>Thu, 16 Feb 2023 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/man/pmc-ptpmgmt/</guid><description>pmc-ptpmgmt: PTP management client SYNOPSIS pmc-ptpmgmt [ -f config-file ] [ -2 | -4 | -6 | -u ] [ -b boundary-hops ] [ -d domain-number ] [ -i interface ] [ -s uds-address ] [ -t transport-specific-field ] [ long-options ] [ -v ] [ -z ] [ command ] &amp;hellip;
DESCRIPTION pmc-ptpmgmt is a program which implements a PTP management client according to IEEE standard 1588. The program reads from the standard input or from the command line actions specified by name and management ID, sends them over the selected transport and prints any received replies.</description></item><item><title>phc_ctl-ptpmgmt(8): directly control PHC device clock</title><link>https://libptpmgmt.nwtime.org/documentation/man/phc_ctl-ptpmgmt/</link><pubDate>Mon, 15 Jun 2020 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/man/phc_ctl-ptpmgmt/</guid><description>phc_ctl-ptpmgmt: directly control PHC device clock SYNOPSIS phc_ctl-ptpmgmt [ options ] &amp;lt;device&amp;gt; [ commands ]
DESCRIPTION phc_ctl-ptpmgmt is a program which can be used to directly control a PHC clock device. Typically, it is used for debugging purposes, and has little use for general control of the device. For general control of PHC clock devices, phc2sys(8) should be preferred.
&amp;lt;device&amp;gt; may be either CLOCK_REALTIME, any /dev/ptpX device, or any ethernet device which supports ethtool&amp;rsquo;s get_ts_info ioctl.</description></item><item><title>401 - Unauthorized Access</title><link>https://libptpmgmt.nwtime.org/401/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/401/</guid><description>This page requires a login as an authorized user.</description></item><item><title>403 - Forbidden</title><link>https://libptpmgmt.nwtime.org/403/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/403/</guid><description>You do not have permission to view this page.</description></item><item><title>404 - Page Not Found</title><link>https://libptpmgmt.nwtime.org/404/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/404/</guid><description>Oops! We couldn&amp;rsquo;t find that page.
Please check the URL or try searching for related content using the search box at the top of this page.</description></item><item><title>500 - Internal Server Error</title><link>https://libptpmgmt.nwtime.org/500/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/500/</guid><description>The web server encountered an error that prevented it from loading this page. Please try again later.
If the issue persists, you can report the error to webmaster.</description></item><item><title>C++ std::vector&lt;> map in Scripts Languages</title><link>https://libptpmgmt.nwtime.org/documentation/std_vectors/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/std_vectors/</guid><description>C++ std::vector&amp;lt;&amp;gt; map in Scripts Languages We use C++ std::vector&amp;lt;T&amp;gt; when we need an array or a list. The benefits of the std::vector&amp;lt;T&amp;gt;, are:
C++ manages the memory for us. We don&amp;rsquo;t need to allocate or free. The vector can grow as we do not need to allocate on advance. In the following discussion we shall call:
&amp;lsquo;container&amp;rsquo; to the mapped class in scripts. &amp;lsquo;element&amp;rsquo; to the C++ class, we use in the container.</description></item><item><title>FAQs</title><link>https://libptpmgmt.nwtime.org/documentation/faqs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/faqs/</guid><description>FAQs Q:
I downloaded the libptpmgmt from sourceforge and then tried to use the libptpmgmt with python test. But getting following error.
# python3 test.py
Traceback (most recent call last):
File &amp;quot;test.py&amp;quot;, line 14, in &amp;lt;module&amp;gt;
import ptpmgmt
ModuleNotFoundError: No module named 'ptpmgmt'
A:
The test script fails to find the libraries.
Python script needs 2 libraries:
libptpmgmt.so - The ptpmgmt C++ library. ptpmgmt.py and _ptpmgmt.so - The python wrapper library.</description></item><item><title>Guide for using Doxygen</title><link>https://libptpmgmt.nwtime.org/documentation/howto_doc_code/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/howto_doc_code/</guid><description>Guide for using Doxygen Preface Our project uses Doxygen to document the library classes, functions, and constants. We document in library headers source code only.
This document guides how to do it properly.
Instructions We use Javadoc style only. We use the at-sign for commands.
We use document block before the item we describe
We use this style /** xxxxx */. The block is usually spread on multiple lines.</description></item><item><title>libptpmgmt Library to Communicate with IEEE 1558 PTP Clocks</title><link>https://libptpmgmt.nwtime.org/documentation/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/readme/</guid><description>libptpmgmt Library to Communicate with IEEE 1558 PTP Clocks Preface The library for PTP management client uses IEEE 1558 management messages to communicate with PTP entities over the network. We support get, set and command of all management TLVs that are described in IEEE 1588-2019. In addition, we support LinuxPTP specific implementation management TLVs.
The library supports the three PTP network layers:
UDP over IP version 4 UDP over IP version 6 PTP over Ethernet â€” we do not support VLAN tags In addition, we support using the Unix network and communicate with LinuxPTP ptp4l.</description></item><item><title>Quick Build Guide</title><link>https://libptpmgmt.nwtime.org/documentation/build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libptpmgmt.nwtime.org/documentation/build/</guid><description>GNU build We use GNU build.
autoconf
./configure
make
configure The configure script support options.
Some basic options come from autoconf and some are specific to our project.
Use help to see more information:
./configure --help
Make file The make file has many targets and parameters.
Use help to see more information:
make help
Linux distribution We provide libraries and wrapper libraries for scripting. You can generate packages for installation.</description></item></channel></rss>